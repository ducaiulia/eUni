@using Newtonsoft.Json
@model EUni_Client.Models.TestViewModel
    
<h2>@Model.Name</h2>


@foreach (var question in Model.Questions)
{
    <h3>@question.Text</h3>
    <label for="score_@question.QuestionId">Score:</label>
    <p id="score_@question.QuestionId">@question.Score</p>
    <div id="@question.QuestionId">
        @foreach (var answer in question.Answers)
        {
            <div>
                <input type="radio" name="[@question.QuestionId]answer" id="[@question.QuestionId]answer" value="@(JsonConvert.SerializeObject(answer))" />
                <label for="[@question.QuestionId]answer">@answer.Text</label>
            </div>
        }
    </div>
    <button type="button" class="btn btn-success" onclick="CheckAnswer(@question.QuestionId)" id="btn_@question.QuestionId">Submit Answer</button>
}

    <input hidden id="finalScore" name="finalScore"/>
    <a href="#myModal" data-toggle="modal" id="testBtn" class="btn btn-warning" onclick="SubmitTest(@ViewBag.StudentId, @ViewBag.TestId)">Submit Test</a>
    @*<a href="#myModal" class="btn btn-lg btn-primary" data-toggle="modal">Launch Demo Modal</a>*@

<div class="bs-example">
    <!-- Button HTML (to Trigger Modal) -->
    
    <!-- Modal HTML -->
    <div id="myModal" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title">You're test is submited.</h4>
                </div>
                <div class="modal-body" id="updateDiv">
                    <p class="text-warning">Maximum grade: @ViewBag.TotalScore</p>
                </div>
                <div class="modal-footer">
                    @Html.ActionLink("Done", "Redirect", "Test", new RouteValueDictionary() { { "moduleId", Model.ModuleId}}, new Dictionary<string,object>{{"class", "btn btn-primary"} })"
                </div>
            </div>
        </div>
    </div>
</div>

<script src="~/Scripts/jquery-2.2.0.js"></script>
<script>
    var finalScore = 0;

    function CheckAnswer(id) {
        var data = $("#" + id + " div").children(":input:checked").val();
        var isCorrect = JSON.parse(data)["IsCorrect"];
        $("#" + id + " div").children(":input").prop("disabled", true);
        $("#btn_" + id).prop('disabled', true);

        var score = $("#score_" + id).text();

        if (isCorrect === true) {
            finalScore = +finalScore + +score;
        }
        $("#finalScore").val(finalScore);
        console.log(finalScore);
    };

    function SubmitTest(studentId, testId) {
        var grade = $("#finalScore").val();
        $("#testBtn").val("disabled", true);
        
        var newParagraph = document.createElement('p');
        newParagraph.textContent = "Your grade: " + finalScore;
        document.getElementById("updateDiv").appendChild(newParagraph);

        $.ajax({
            method: "POST",
            url: "/Test/SubmitFinalGrade",
            data: { studentId: studentId, finalScore: grade, testId: testId },
            success: function() {
                console.log("SUCCESS"); 
            }
        });
    };
</script>